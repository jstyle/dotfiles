# Prefixを＜Ctrl + b＞から＜Ctrl + t＞に変えます。
# 例：新しいウィンドウを開くときは＜Ctrl + t＞＜c＞と押すことになります。
# "t"以外の好きなキーにしても問題ありません。他の操作と重複しないようにしましょう。
set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefi

set-option -g default-terminal "xterm"
set-option -g history-limit 10000

# ウィンドウの移動
# Prefix(ここではCtrl+t)を連続入力することでウィンドウを移動させます。

bind C-t next-window

# ペインのサイズ変更をvim風にする
# ＜Prefix＞＜Ctrl + { h | i | j | k }＞
# ＜Ctrl + { h | i | j | k }＞は連続して入力可能。
# 1回押すごとに5行(列)境界を移動させる。

bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5

# ペインの移動1(Vim風にする)

#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R


# ペインの移動2
# Shift + 上下左右でペインを移動できるようにする。(＜Prefix＞不要)
# 行頭に"bind -n"をつけるとPrefixが不要になる。

bind -n S-Left select-pane -L
bind -n S-Down select-pane -D
bind -n S-Up select-pane -U
bind -n S-Right select-pane -R

unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux Reloaded!!"

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

#####################################################
# http://gihyo.jp/admin/serial/01/ubuntu-recipe/0292
#####################################################
bind-key [ copy-mode \; display "(Copy mode)"
bind-key Escape copy-mode \; display "(Copy mode)"

####################################################
#http://d.hatena.ne.jp/kakurasan/20100331/p1
####################################################

## ウィンドウ番号を1から開始
set-option -g base-index 1

## マウスクリックでペイン選択
#set-option -g mouse-select-pane on

## メッセージ表示時間(既定値は1000?)
set-option -g display-time 2000


## ここからステータス行(最下行)の設定

## 既定の属性
# 「xxx-fg」「xxx-bg」は色、「xxx-attr」は属性
# 透明にしたい場合、端末によっては
# status-bgを「default」にすると256色パレット色の表示が部分的におかしくなる?
# 背景色は端末エミュレータの背景色に近いものを設定すると良いかも
set-option -g status-fg   default
set-option -g status-bg   default 
set-option -g status-attr default

set-option -g status-left-fg   default
set-option -g status-left-bg   default 
set-option -g status-left-attr default

set-option -g status-right-fg   colour115
set-option -g status-right-bg   colour22
set-option -g status-right-attr bold

## ウィンドウ一覧部における現在非アクティブなウィンドウの項目の表示
set-window-option -g window-status-fg   white
set-window-option -g window-status-bg   default
set-window-option -g window-status-attr default

## ウィンドウ一覧部における現在アクティブなウィンドウの項目の表示
## 端末によっては256色の色を用いると正常に表示されない?
set-window-option -g window-status-current-fg   white
set-window-option -g window-status-current-bg   default 
set-window-option -g window-status-current-attr bold

## メッセージ/プロンプト
set-option -g message-fg   colour115
set-option -g message-bg   colour24
set-option -g message-attr bright

## スクロールの右上やコピーモード選択範囲のスタイル
set-window-option -g mode-fg   colour146
# 256色パレットの色を付けると表示が変になる?(reverseすると回避可能?)
set-window-option -g mode-bg   colour62

## ここからステータス行(最下行)の設定

## 既定の属性
# 「xxx-fg」「xxx-bg」は色、「xxx-attr」は属性
# 透明にしたい場合、端末によっては
# status-bgを「default」にすると256色パレット色の表示が部分的におかしくなる?
# 背景色は端末エミュレータの背景色に近いものを設定すると良いかも
set-option -g status-fg   default
set-option -g status-bg   default
set-option -g status-attr default

# status-left-* と status-right-* の設定はおすすめしない
# status-leftやstatus-rightの中で記述したほうが良い
#set-option -g status-left-fg   default
#set-option -g status-left-bg   default
#set-option -g status-left-attr default

#set-option -g status-right-fg   default
#set-option -g status-right-bg   default
#set-option -g status-right-attr default

## ウィンドウ一覧部における現在非アクティブなウィンドウの項目の表示
set-window-option -g window-status-fg   colour115
set-window-option -g window-status-bg   default
set-window-option -g window-status-attr bold

## ウィンドウ一覧部における現在アクティブなウィンドウの項目の表示
## 端末によっては256色の色を用いると正常に表示されない?
set-window-option -g window-status-current-fg   colour253
set-window-option -g window-status-current-bg   colour125
set-window-option -g window-status-current-attr bold

## メッセージ/プロンプト
#set-option -g message-fg   colour115
set-option -g message-fg   white
set-option -g message-bg   colour24
set-option -g message-attr bright

## スクロールの右上やコピーモード選択範囲のスタイル
set-window-option -g mode-fg   colour254
# 256色パレットの色を付けると表示が変になる?(reverseすると回避可能?)
set-window-option -g mode-bg   colour34
set-window-option -g mode-attr reverse,bold

## 左パネルを設定する
set -g status-left-length 50
set -g status-left \
"#{?client_prefix,#[reverse],}#[fg=green][#S:#I.#P]#[fg=yellow][#(whoami)@#h]  "

## 右パネルを設定する
set -g status-right-length 80
set -g status-right \
"#{?client_prefix,#[reverse],}"\
"#[fg=green]#(${HOME}/dotfiles/bin/git-echo-branch-tmux-current-pane)"\
"#[fg=yellow]#(${HOME}/dotfiles/bin/git-echo-username-and-email)"\
"#[fg=cyan][%Y-%m-%d(%a) %H:%M]"

## ウィンドウマネージャ向けのタイトル
set-option -g set-titles on
set-option -g set-titles-string "[tmux]#T \"#W\"(#I/#P) @ #H"

## ステータス行更新間隔(1で毎秒更新・既定値15)
set-option -g status-interval 5

# Use vim keybindings in copy mode
set -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip -i -selection clipboard"

# Mouse configr
# ver < 2.1
#set -g -w mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
# ver >= 2.1
set -g mouse on
